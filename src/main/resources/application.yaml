server:
  port: 9002
  shutdown: graceful
  netty:
    connection-timeout: 2s # 서버와 TCP 연결을 위해 기다리는 시간
    idle-timeout: 15s # 데이터가 전송되지 않는 경우 TCP 연결을 닫기 전에 기다리는 시간

spring:
  application:
    name: order-service
  lifecycle:
    timeout-per-shutdown-phase: 15s # graceful shutdown 시간을 15초로 설정
  r2dbc:
    username: user
    password: password
    url: r2dbc:postgresql://localhost:5432/polardb_order
    pool:
      max-create-connection-time: 2s # Pool에서 Connection Object 하나 얻을 때까지 기다릴 수 있는 최대한의 시간
      initial-size: 5 # Connection Pool의 초기 크기
      max-size: 10 # Pool이 최대한으로 가질 수 있는 Connection 수
  flyway:
    user: ${spring.r2dbc.username}
    password: ${spring.r2dbc.password}
    url: jdbc:postgresql://localhost:5432/polardb_order
  config:
    import: "optional:configserver:" # 외부 config server가 열려있으면 가져오고 없으면, 이것 사용
  cloud:
    config:
      uri: http://localhost:8888 # Config Server's URL
      request-connect-timeout: 5000 # Config Server로의 연결 시도 시간 제한(ms)
      request-read-timeout: 5000 # Config Server로부터 응답을 기다리는 시간 제한(ms)
      fail-fast: false # 초기 시작 시 구성 서버 연결 실패 시 애플리케이션이 실패하도록 설정(true일 경우). 개발 환경에서는 false로 설정.
      retry:
        max-attempts: 6 # 재시도 할 최대 횟수
        initial-interval: 1000 # 첫 재시도 간격(ms)
        max-interval: 2000 # 재시도 간격의 최대 값(ms)
        multiplier: 1.1 # 재시도 간격 증가 배율

polar:
  catalog-service-uri: "http://localhost:9001"
